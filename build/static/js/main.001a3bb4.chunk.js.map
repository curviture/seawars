{"version":3,"sources":["components/stages/Build/Build.module.css","components/stages/Play/Play.module.css","components/stages/Final.module.css","components/Field/Field.module.css","components/stages/Build/ShipSelection/ShipSelection.module.css","components/stages/Play/Score.module.css","components/stages/GameStart.module.css","components/UI/Header.module.css","components/Field/Cell.module.css","app.module.css","components/Ships/Ship.module.css","store/stageSlice.js","data/defaultShips.js","store/buildSlice.js","utils/common/isOutOfBounds.js","utils/common/vectors.js","gameEngine/isShipOnFieldDead.js","utils/common/getCoordsFromId.js","utils/fieldUtils/isAllowed.js","store/fieldSlice.js","gameEngine/fillShips.js","store/gameSlice.js","utils/common/createMatrix.js","store/playSlice.js","store/store.js","components/UI/Header.js","components/stages/GameStart.js","components/stages/RoundStart.js","components/Field/Cell.js","components/Field/Field.js","components/Ships/Ships.js","components/stages/Build/ShipSelection/ShipSelection.js","components/stages/Build/Build.js","utils/common/base.js","gameEngine/aiPlay.js","components/stages/Play/Score.js","components/stages/Play/Play.js","components/stages/Final.js","App.js","index.js"],"names":["module","exports","stageSlice","createSlice","name","initialState","round","reducers","roundStart","state","start","build","play","final","actions","defaultShips","buildSlice","selectedShipSize","shipsToBuild","isVertical","currentlyBuildingCellId","selectShip","action","payload","fieldHoverWhenBuilding","id","changeDirection","placeShipWhenBuilding","some","map","shipToBuild","clearShips","ships","item","resetShips","isOutOfBounds","row","col","maxRow","maxCol","undefined","res","directions","vectors","right","left","up","down","lookSides","d","filter","lookAround","coords","i","j","push","c","getHitShipInfo","field","isDead","ship","forEach","direction","dCoords","type","isShipOnFieldDead","getCoordFromId","match","getShipCoords","size","isAllowed","coord","length","every","shipsCell","r","isFreeAround","fieldSlice","fields","initField","players","emptyField","slice","setField","player","Object","assign","hoverShipOverField","hoverId","fieldRow","rowIdx","cell","colIdx","resetHighlightOnField","putShipIntoField","hit","playerField","v","getRandomInt","maxNum","Math","floor","random","fillShips","shipsToFill","generatedField","shipsLeftToFill","iter","amount","gameSlice","aiField","winner","setPlayers","newPlayers","generateFieldForComputer","createMatrix","w","h","fill","m","playSlice","playerTurn","score","p1","p2","fieldsForOpponents","initFieldsForOpponents","reduce","acc","p","setScore","playerScore","switchPlayer","hitOpponentField","fieldForOpponent","setWinner","configureStore","reducer","game","stage","stageReducer","buildReducer","fieldReducer","Header","className","styles","header","title","GameStart","useSelector","dispatch","useDispatch","useEffect","gameStart","btn","onClick","RoundStart","Cell","props","style","Field","content","fieldCell","hidden","colLabel","idx","width","textAlign","rowLabel","height","String","fromCharCode","charCodeAt","fieldContainer","onMouseOverCapture","event","console","log","target","children","Ship","ShipSelection","fullWidth","selectedShip","shipAmountLabel","Build","useState","startBuild","setStartBuild","generatedFieldHandler","buildFieldsContainer","buildFieldContainer","mb","onMouseOutCapture","onClickCapture","btnPrimary","disabled","amountCellsToBuild","sum","keys","amountCellsInField","rowSum","changeStageToPlayHandler","randomInt","range","crawlUntil","targetCell","aiPlay","wounded","scanForWoundedShip","sidesCoords","side","sideCell","t","typeOfSides","coordOfDirection","rowOfDirection","colOfDirection","targets","getTargets","randomRow","randomCol","Score","scoreContent","playerScoreNumber","Play","targetScore","useMemo","playerTurnAtStart","a","oppositionFields","fieldClickHandler","targetCellType","info","turnInfo","fieldsContainer","class","newGameBox","Final","mainTitle","winnerLabel","App","document","addEventListener","keyCode","onKeyDown","ReactDOM","createRoot","getElementById","render","store"],"mappings":"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","file":"static/js/main.001a3bb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"build\":\"Build_build__80zGk\",\"buildFieldsContainer\":\"Build_buildFieldsContainer__3GFRi\",\"buildFieldContainer\":\"Build_buildFieldContainer__WorVe\",\"btnPrimary\":\"Build_btnPrimary__2s85c button_btnPrimary__3HWZq button_btn__4PFKh\",\"mb\":\"Build_mb__icQMq\",\"fullWidth\":\"Build_fullWidth__AHbz4\",\"action\":\"Build_action__28HAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldsContainer\":\"Play_fieldsContainer__1nOpz\",\"fieldContainer\":\"Play_fieldContainer__15tmK\",\"turnInfo\":\"Play_turnInfo__vvmPe\",\"info\":\"Play_info__qbZiH\",\"btn\":\"Play_btn__1qhjj button_btnPrimary__3HWZq button_btn__4PFKh\",\"newGameBox\":\"Play_newGameBox__2fcGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Final\":\"Final_Final__2aDP-\",\"btn\":\"Final_btn__36slY button_btnPrimary__3HWZq button_btn__4PFKh\",\"mainTitle\":\"Final_mainTitle__3FIfZ\",\"winnerLabel\":\"Final_winnerLabel__2whq3\",\"winner\":\"Final_winner__zkvf1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldContainer\":\"Field_fieldContainer__UdcJf\",\"rowLabel\":\"Field_rowLabel__11kbX\",\"colLabel\":\"Field_colLabel__2AdpZ\",\"field\":\"Field_field__3XCAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ship\":\"ShipSelection_ship__1Y_w7\",\"shipAmountLabel\":\"ShipSelection_shipAmountLabel__3ndcq\",\"selectedShip\":\"ShipSelection_selectedShip__3t3yu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"Score_score__2dHm7\",\"player\":\"Score_player__3_E2q\",\"playerScore\":\"Score_playerScore__1n0Lx\",\"playerScoreNumber\":\"Score_playerScoreNumber__2buC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameStart\":\"GameStart_gameStart__IBNvd\",\"title\":\"GameStart_title__3fNUp\",\"btn\":\"GameStart_btn__1VlDF button_btnPrimary__3HWZq button_btn__4PFKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__o0dWY\",\"title\":\"Header_title__bm85D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__1AuXF\",\"miss\":\"Cell_miss__1MmZo\",\"ship\":\"Cell_ship__3OvkU\",\"dead\":\"Cell_dead__3YCU7\",\"notAllowed\":\"Cell_notAllowed__1rXGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fields\":\"app_fields__2FaMK\",\"app\":\"app_app__cewju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ship\":\"Ship_ship__1qD57\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst stageSlice = createSlice({\n  name: \"stage\",\n  initialState: { round: \"start\" },\n  reducers: {\n    roundStart: (state) => {\n      state.round = \"roundStart\";\n    },\n    start: (state) => {\n      state.round = \"start\";\n    },\n    build: (state) => {\n      state.round = \"build\";\n    },\n    play: (state) => {\n      state.round = \"play\";\n    },\n    final: (state) => {\n      state.round = \"final\";\n    },\n  },\n});\n\nexport const { roundStart, start, build, play, final } = stageSlice.actions;\n\nexport default stageSlice.reducer;\n","const defaultShips = [\n  [1, 4],\n  [2, 3],\n  [3, 2],\n  [4, 1],\n];\n\nexport default defaultShips;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport defaultShips from \"../data/defaultShips\";\n\nconst buildSlice = createSlice({\n  name: \"build\",\n  initialState: {\n    selectedShipSize: null,\n    shipsToBuild: defaultShips,\n    isVertical: true,\n    currentlyBuildingCellId: \"\",\n  },\n  reducers: {\n    selectShip: (state, action) => {\n      state.selectedShipSize = action.payload;\n    },\n    fieldHoverWhenBuilding: (state, action) => {\n      state.currentlyBuildingCellId = action.payload.id;\n    },\n    changeDirection: (state) => {\n      state.isVertical = !state.isVertical;\n    },\n    placeShipWhenBuilding: (state, action) => {\n      if (!state.selectedShipSize) return;\n      if (\n        state.shipsToBuild.some(\n          (shipsToBuild) =>\n            shipsToBuild[0] === state.selectedShipSize && shipsToBuild[1] === 0\n        )\n      )\n        return;\n      state.shipsToBuild = state.shipsToBuild.map((shipToBuild) => {\n        if (shipToBuild[0] === state.selectedShipSize) {\n          shipToBuild[1] = shipToBuild[1] - 1;\n          return shipToBuild;\n        }\n        return shipToBuild;\n      });\n    },\n    clearShips: (state, action) => {\n      let ships = state.shipsToBuild;\n      ships = ships.map((item) => [item[0], 0]);\n      state.shipsToBuild = ships;\n      state.selectedShipSize = null;\n    },\n    resetShips: (state) => {\n      state.shipsToBuild = defaultShips;\n    },\n  },\n});\n\nexport const {\n  selectShip,\n  placeShipWhenBuilding,\n  fieldHoverWhenBuilding,\n  changeDirection,\n  resetShips,\n  clearShips,\n} = buildSlice.actions;\n\nexport default buildSlice.reducer;\n","const isOutOfBounds = (row, col, maxRow = 10, maxCol) => {\n  maxCol = maxCol === undefined ? maxRow : maxCol;\n  let res = row >= maxRow || col >= maxCol || row < 0 || col < 0;\n  return res;\n};\n\nexport default isOutOfBounds;\n","import isOutOfBounds from \"./isOutOfBounds\";\n\nlet directions = [\"up\", \"down\", \"left\", \"right\"];\n\nlet vectors = {\n  right: ({ row, col }) => {\n    return { row, col: col + 1 };\n  },\n  left: ({ row, col }) => {\n    return { row, col: col - 1 };\n  },\n  up: ({ row, col }) => {\n    return { row: row + 1, col };\n  },\n  down: ({ row, col }) => {\n    return { row: row - 1, col };\n  },\n  lookSides: ({ row, col }) => {\n    let dirs = directions.map((d) => {\n      return vectors[d]({ row, col });\n    });\n    return dirs.filter((d) => !isOutOfBounds(d.row, d.col, 10, 10));\n  },\n  lookAround: ({ row, col }) => {\n    let coords = [];\n    for (let i = -1; i < 2; i++) {\n      for (let j = -1; j < 2; j++) {\n        if ((i === 0 && j === 0) || isOutOfBounds(row + i, col + j, 10, 10))\n          continue;\n        coords.push({ row: row + i, col: col + j });\n      }\n    }\n    return coords.filter((c) => !isOutOfBounds(c.row, c.col, 10, 10));\n  },\n};\n\nexport { directions };\n\nexport default vectors;\n","import vectors, { directions } from \"../utils/common/vectors\";\nimport isOutOfBounds from \"../utils/common/isOutOfBounds\";\n\nconst isShip = (cell) => cell && (cell.type === \"ship\" || cell.type === \"dead\");\n\nconst getHitShipInfo = ({ field, row, col }) => {\n  let isDead = true;\n  let ship = [{ row, col }];\n\n  directions.forEach((direction) => {\n    let dCoords = vectors[direction]({ row, col });\n    let iter = 0;\n    while (\n      !isOutOfBounds(dCoords.row, dCoords.col, 10, 10) &&\n      field[dCoords.row][dCoords.col].type === \"dead\" &&\n      isDead\n    ) {\n      ship.push({ row: dCoords.row, col: dCoords.col });\n      dCoords = vectors[direction]({ row: dCoords.row, col: dCoords.col });\n    }\n    if (\n      !isOutOfBounds(dCoords.row, dCoords.col, 10, 10) &&\n      field[dCoords.row][dCoords.col].type === \"ship\"\n    ) {\n      isDead = false;\n    }\n  });\n  return { isDead, ship };\n};\n\nconst isShipOnFieldDead = ({ field, row, col }) => {\n  return getHitShipInfo({ field, row, col }).isDead;\n};\n\nexport { getHitShipInfo };\n\nexport default isShipOnFieldDead;\n","function getCoordFromId(id) {\n  const rowId = id.match(/^\\d{1,2}/i)[0] - 1;\n  const colId = id.match(/\\d{1,2}$/i)[0] - 1;\n  return { row: rowId, col: colId };\n}\n\nexport default getCoordFromId;\n","function isFreeAround({ field, row, col }) {\n  for (let r = -1; r < 2; r++) {\n    for (let c = -1; c < 2; c++) {\n      if (\n        field[row + r] === undefined ||\n        field[row + r][col + c] === undefined\n      ) {\n        continue;\n      }\n      if (\n        field[row + r][col + c].type !== \"\" &&\n        field[row + r][col + c].type !== \"highlight\"\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction getShipCoords({ field, row, col, size, isVertical }) {\n  let ship = [];\n  if (isVertical) {\n    for (let i = 0; i < size; i++) {\n      ship.push({\n        row: row + i,\n        col: col,\n        type: field[row + i][col].type,\n      });\n    }\n  } else {\n    for (let i = 0; i < size; i++) {\n      ship.push({\n        row: row,\n        col: col + i,\n        type: field[row][col + i].type,\n      });\n    }\n  }\n  return ship;\n}\n\nconst isAllowed = ({ field, coord, size, isVertical }) => {\n  let { row, col } = coord;\n  if (isVertical && row + size > field.length) {\n    row = field.length - size - 1;\n  }\n  if (!isVertical && col + size > field[0].length) {\n    col = field[0].length - size - 1;\n  }\n  let shipsCells = getShipCoords({\n    field,\n    col,\n    row,\n    size,\n    isVertical,\n  });\n\n  return shipsCells.every((shipsCell) => {\n    return isFreeAround({\n      field,\n      row: shipsCell.row,\n      col: shipsCell.col,\n    });\n  });\n};\n\nexport { getShipCoords };\n\nexport default isAllowed;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport isShipOnFieldDead, {\n  getHitShipInfo,\n} from \"../gameEngine/isShipOnFieldDead\";\nimport getCoordFromId from \"../utils/common/getCoordsFromId\";\nimport vectors from \"../utils/common/vectors\";\nimport isAllowed from \"../utils/fieldUtils/isAllowed\";\n\nconst fieldSlice = createSlice({\n  name: \"field\",\n  initialState: {\n    fields: {},\n  },\n  reducers: {\n    initField: (state, action) => {\n      let { players } = action.payload;\n      let emptyField = [];\n      for (let i = 0; i < 10; i++) {\n        let row = [];\n        for (let j = 0; j < 10; j++) {\n          row.push({ type: \"\" });\n        }\n        emptyField[i] = row;\n      }\n      let fields = state.fields;\n      for (let player of players) {\n        fields[player] = emptyField.slice();\n      }\n      state.fields = fields;\n    },\n    setField: (state, action) => {\n      let player = action.payload.player;\n      let fields = state.fields;\n      fields = Object.assign(fields, { [player]: action.payload.field });\n      state.fields = fields;\n    },\n    hoverShipOverField: (state, action) => {\n      const {\n        hoverId,\n        selectedShipSize: size,\n        isVertical,\n        player,\n      } = action.payload;\n      const { row, col } = getCoordFromId(hoverId);\n      let field = state.fields[player];\n\n      if (isVertical) {\n        field = field.map((fieldRow, rowIdx) => {\n          return fieldRow.map((cell, colIdx) => {\n            let { type } = cell;\n            if (type !== \"highlight\" && type !== \"\") {\n              return { type };\n            }\n            if (type === \"highlight\") {\n              type = \"\";\n            }\n            if (rowIdx >= row && row + size > rowIdx && col === colIdx) {\n              return { type: \"highlight\" };\n            }\n            if (\n              row + size > field.length &&\n              field.length - size <= rowIdx &&\n              colIdx === col\n            ) {\n              return { type: \"highlight\" };\n            }\n\n            return { type };\n          });\n        });\n      } else {\n        field = field.map((fieldRow, rowIdx) => {\n          return fieldRow.map((cell, colIdx) => {\n            let { type } = cell;\n            if (type !== \"highlight\" && type !== \"\") {\n              return { type };\n            }\n            if (type === \"highlight\") {\n              type = \"\";\n            }\n            if (rowIdx == row && col + size > colIdx && colIdx >= col) {\n              return { type: \"highlight\" };\n            }\n            if (\n              col + size > field[0].length &&\n              field[0].length - size <= colIdx &&\n              row === rowIdx\n            ) {\n              return { type: \"highlight\" };\n            }\n            return { type };\n          });\n        });\n      }\n\n      state.fields[player] = field;\n    },\n    resetHighlightOnField: (state, action) => {\n      let field = state.fields[action.payload.player];\n      field = field.map((row) =>\n        row.map((cell) => {\n          if (cell.type === \"highlight\") {\n            cell.type = \"\";\n          }\n          return cell;\n        })\n      );\n      state.fields[\"p1\"] = field;\n    },\n    putShipIntoField: (state, action) => {\n      let { selectedShipSize: size, id, player, isVertical } = action.payload;\n      let field = state.fields[player].slice();\n      let { row, col } = getCoordFromId(id);\n\n      if (\n        isVertical &&\n        isAllowed({\n          field,\n          coord: { row, col },\n          size,\n          isVertical: true,\n        })\n      ) {\n        field = field.map((fieldRow, rowIdx) => {\n          return fieldRow.map((cell, colIdx) => {\n            let type = cell.type;\n            if (rowIdx >= row && rowIdx < row + size && colIdx === col) {\n              type = \"ship\";\n            }\n            if (\n              row + size > field.length &&\n              field.length - size <= rowIdx &&\n              colIdx === col\n            ) {\n              type = \"ship\";\n            }\n            return { type };\n          });\n        });\n      }\n      if (\n        !isVertical &&\n        isAllowed({ field, coord: { row, col }, size, isVertical: false })\n      ) {\n        field = field.map((fieldRow, rowIdx) => {\n          return fieldRow.map((cell, colIdx) => {\n            let type = cell.type;\n            if (colIdx >= col && colIdx < col + size && rowIdx === row) {\n              type = \"ship\";\n            }\n            if (\n              col + size > field[0].length &&\n              field[0].length - size <= colIdx &&\n              rowIdx === row\n            ) {\n              type = \"ship\";\n            }\n            return { type };\n          });\n        });\n      }\n\n      state.fields[player] = field;\n    },\n    hit: (state, action) => {\n      const { row, col, player } = action.payload;\n      let playerField = state.fields[player];\n      if (playerField[row][col].type === \"ship\") {\n        playerField[row][col].type = \"dead\";\n        let field = state.fields[player];\n        if (isShipOnFieldDead({ field: state.fields[player], row, col })) {\n          let { ship } = getHitShipInfo({\n            field: state.fields[player],\n            row,\n            col,\n          });\n          ship.forEach((cell) => {\n            vectors\n              .lookAround({ row: cell.row, col: cell.col })\n              .map((v) => {\n                let f = field[v.row][v.col];\n                return { type: f.type, row: v.row, col: v.col };\n              })\n              .filter((cell) => {\n                return cell.type === \"\" || cell.type === \"miss\";\n              })\n              .forEach((cell) => {\n                field[cell.row][cell.col].type = \"notAllowed\";\n              });\n          });\n        }\n      }\n      if (playerField[row][col].type === \"\") {\n        playerField[row][col].type = \"miss\";\n      }\n    },\n  },\n});\n\nexport const {\n  initField,\n  setField,\n  putShipIntoField,\n  hoverShipOverField,\n  resetHighlightOnField,\n  hit,\n} = fieldSlice.actions;\n\nexport default fieldSlice.reducer;\n","import defaultShips from \"../data/defaultShips\";\nimport { getShipCoords } from \"../utils/fieldUtils/isAllowed\";\nimport isAllowed from \"../utils/fieldUtils/isAllowed\";\nimport { compose } from \"@reduxjs/toolkit\";\n\nfunction getRandomInt(maxNum = 10) {\n  return Math.floor(Math.random() * maxNum);\n}\n\nfunction defaultField(maxRow = 10, maxCol = 10) {\n  return Array(10).fill(Array(10).fill({ type: \"\" }));\n}\n\nfunction fillShips({ field, shipsToFill = defaultShips }) {\n  let generatedField = field.slice();\n  let shipsLeftToFill = shipsToFill.slice();\n  let iter = 0;\n  const maxRow = 10;\n  const maxCol = 10;\n\n  while (shipsLeftToFill.some((ship) => ship[1] > 0) && iter < 250) {\n    iter++;\n    let isVertical = getRandomInt(2) % 2 === 0;\n\n    let row = getRandomInt(10);\n    let col = getRandomInt(10);\n    let size = shipsLeftToFill[getRandomInt(shipsLeftToFill.length)][0];\n    if (isVertical) {\n      if (row + size > maxRow) {\n        row = maxRow - size;\n      }\n    }\n    if (!isVertical) {\n      if (col + size > maxCol) {\n        col = maxCol - size;\n      }\n    }\n    let ship = getShipCoords({\n      field: generatedField,\n      row,\n      col,\n      size,\n      isVertical,\n    });\n    if (\n      isAllowed({\n        field: generatedField,\n        coord: { row, col },\n        size,\n        isVertical,\n      })\n    ) {\n      ship.forEach((cell) => {\n        let { row, col } = cell;\n        generatedField[row][col] = { type: \"ship\" };\n      });\n      shipsLeftToFill = shipsLeftToFill\n        .map((item) => {\n          if (item[0] === size) {\n            let amount = item[1];\n            return [size, amount - 1];\n          }\n          return item;\n        })\n        .filter((item) => item[1] !== 0);\n    }\n  }\n\n  return generatedField;\n}\n\nexport default fillShips;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport fillShips from \"../gameEngine/fillShips\";\n\nconst gameSlice = createSlice({\n  name: \"game\",\n  initialState: {\n    players: [],\n    aiField: [],\n    winner: null,\n  },\n  reducers: {\n    setPlayers: (state, action) => {\n      let newPlayers = action.payload.players;\n      state.players = newPlayers;\n    },\n    generateFieldForComputer: (state, action) => {\n      state.aiField = fillShips({ field: action.payload.field });\n    },\n  },\n});\n\nexport const { setPlayers, generateFieldForComputer } = gameSlice.actions;\n\nexport default gameSlice.reducer;\n","function createMatrix(w = 10, h = 10, fill = { type: \"\" }) {\n  let m = [];\n  for (let i = 0; i < w; i++) {\n    let c = [];\n    for (let j = 0; j < h; j++) {\n      c.push(fill);\n    }\n    m.push(c);\n  }\n  return m;\n}\n\nexport default createMatrix;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport isShipOnFieldDead, {\n  getHitShipInfo,\n} from \"../gameEngine/isShipOnFieldDead\";\nimport createMatrix from \"../utils/common/createMatrix\";\nimport isOutOfBounds from \"../utils/common/isOutOfBounds\";\nimport vectors from \"../utils/common/vectors\";\n\nconst playSlice = createSlice({\n  name: \"play\",\n  initialState: {\n    playerTurn: null,\n    score: { p1: 0, p2: 0 },\n    fieldsForOpponents: {},\n  },\n  reducers: {\n    initFieldsForOpponents(state, action) {\n      let { players } = action.payload;\n      let fields = players.reduce((acc, p) => {\n        acc[p] = createMatrix(10, 10, { type: \"fog\" });\n        return acc;\n      }, {});\n      state.fieldsForOpponents = fields;\n    },\n    setScore: (state, action) => {\n      const { player, playerScore } = action.payload;\n      state.score[player] = playerScore;\n    },\n    switchPlayer: (state, action) => {\n      state.playerTurn = action.payload;\n    },\n    hitOpponentField: (state, action) => {\n      const { player, field, row, col } = action.payload;\n      let fieldForOpponent = state.fieldsForOpponents[player];\n      if (field[row][col].type == \"ship\") {\n        fieldForOpponent[row][col].type = \"dead\";\n        let score = state.score;\n        if (player === \"p2\") {\n          score[\"p1\"] = score[\"p1\"] + 1;\n        } else {\n          score[\"p2\"] = score[\"p2\"] + 1;\n        }\n        state.score = score;\n\n        if (isShipOnFieldDead({ field, row, col })) {\n          let { ship } = getHitShipInfo({ field, row, col });\n          ship.forEach((cell) => {\n            vectors\n              .lookAround({ row: cell.row, col: cell.col })\n              .map((v) => {\n                let f = field[v.row][v.col];\n                return { type: f.type, row: v.row, col: v.col };\n              })\n              .filter((cell) => {\n                return cell.type === \"\" || cell.type === \"miss\";\n              })\n              .forEach((cell) => {\n                fieldForOpponent[cell.row][cell.col].type = \"notAllowed\";\n              });\n          });\n        }\n      }\n      if (field[row][col].type == \"\") {\n        fieldForOpponent[row][col].type = \"miss\";\n      }\n      state.fieldsForOpponents[player] = fieldForOpponent;\n    },\n    setWinner: (state, action) => {\n      state.winner = action.payload;\n    },\n  },\n});\n\nexport const {\n  switchPlayer,\n  setScore,\n  initFieldsForOpponents,\n  hitOpponentField,\n  setWinner,\n} = playSlice.actions;\n\nexport default playSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport stageReducer from \"./stageSlice\";\nimport buildReducer from \"./buildSlice\";\nimport fieldReducer from \"./fieldSlice\";\nimport gameSlice from \"./gameSlice\";\nimport playSlice from \"./playSlice\";\n\nexport default configureStore({\n  reducer: {\n    game: gameSlice,\n    stage: stageReducer,\n    build: buildReducer,\n    field: fieldReducer,\n    play: playSlice,\n  },\n});\n","import styles from \"./Header.module.css\";\n\nconst Header = () => {\n  return (\n    <div className={styles.header}>\n      <h1 className={styles.title}>SEAWARS</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { build, play } from \"../../store/stageSlice\";\nimport { setPlayers } from \"../../store/gameSlice\";\n\nimport styles from \"./GameStart.module.css\";\nimport { useEffect } from \"react\";\n\nconst GameStart = () => {\n  const players = useSelector((state) => state.game.players);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setPlayers({ players: [\"p1\", \"p2\"] }));\n  }, [dispatch]);\n  return (\n    <div className={styles.gameStart}>\n      <h1 className={styles.title}>Do you want to start the game?</h1>\n      <button\n        className={styles.btn}\n        onClick={() => {\n          dispatch(build());\n        }}\n      >\n        Start\n      </button>\n    </div>\n  );\n};\n\nexport default GameStart;\n","const RoundStart = () => {\n  return <button>RoundStart</button>;\n};\n\nexport default RoundStart;\n","import style from \"./Cell.module.css\";\n\nconst Cell = (props) => {\n  const { type, id } = props;\n\n  let backgroundStyle = \"\";\n  if (type === \"highlight\") {\n    backgroundStyle = \"blue\";\n  }\n  if (type === \"dead\") {\n    backgroundStyle = \"red\";\n  }\n  if (type === \"notAllowed\") {\n    backgroundStyle = \"black\";\n  }\n  if (type === \"disabled\") {\n    backgroundStyle = \"gray\";\n  }\n  return (\n    <div\n      className={`${style.cell} ${style[type]}`}\n      // style={{ backgroundColor: backgroundStyle }}\n      {...(id && { id: id })}\n    ></div>\n  );\n};\n\nexport default Cell;\n","import { useSelector } from \"react-redux\";\n\nimport Cell from \"./Cell\";\n\nimport styles from \"./Field.module.css\";\n\nconst Field = (props) => {\n  const { field } = props;\n\n  const content =\n    field &&\n    field.map((fieldRow, row) =>\n      fieldRow.map((fieldCell, col) => {\n        let { type } = fieldCell;\n        return (\n          <Cell\n            type={props.hidden ? \"\" : type}\n            key={row + \"_\" + col}\n            id={`${row + 1}_${col + 1}`}\n          />\n        );\n      })\n    );\n  const colLabel = field.map((item, idx) => (\n    <span style={{ width: \"20px\", textAlign: \"center\" }}>{idx}</span>\n  ));\n  const rowLabel = field.map((item, idx) => {\n    return (\n      <span style={{ width: \"20px\", textAlign: \"center\", height: \"20px\" }}>\n        {String.fromCharCode(\"a\".charCodeAt(0) + idx)}\n      </span>\n    );\n  });\n\n  return (\n    <div\n      className={styles.fieldContainer}\n      onMouseOverCapture={(event) => {\n        console.log(\"capture\", event.target.id);\n      }}\n    >\n      <div className={styles.rowLabel}>{rowLabel}</div>\n      <div className={styles.field}>{content}</div>\n      <div className={styles.colLabel}>{colLabel}</div>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Field;\n","import Cell from \"../Field/Cell\";\n\nimport styles from \"./Ship.module.css\";\n\nconst Ship = ({ size }) => {\n  let content = [];\n  for (let i = 0; i < size; i++) {\n    content.push(Cell);\n  }\n  return (\n    <div className={styles.ship}>\n      {content.map((c, idx) => (\n        <Cell key={idx} id={\"selectShip\" + idx} />\n      ))}\n    </div>\n  );\n};\n\nexport default Ship;\n","import Ship from \"../../../Ships/Ships\";\n\nimport styles from \"./ShipSelection.module.css\";\n\nimport defaultShips from \"../../../../data/defaultShips\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectShip } from \"../../../../store/buildSlice\";\n\nconst ShipSelection = () => {\n  const selectedShipSize = useSelector((state) => state.build.selectedShipSize);\n  const shipsToBuild = useSelector((state) => state.build.shipsToBuild);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      {shipsToBuild.map((ship, idx) => {\n        return (\n          <div\n            key={idx}\n            className={`${styles.ship} ${styles.fullWidth} ${\n              selectedShipSize == ship[0] ? styles.selectedShip : \"\"\n            }`}\n            onClick={() => {\n              dispatch(selectShip(ship[0]));\n            }}\n          >\n            <Ship size={ship[0]} />\n            <span className={styles.shipAmountLabel}>{ship[1]}</span>\n          </div>\n        );\n      })}\n      ;\n    </div>\n  );\n};\n\nexport default ShipSelection;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { play } from \"../../../store/stageSlice\";\n// import gameSlice, { generateFieldForComputer } from \"../../../store/gameSlice\";\nimport buildSlice, {\n  clearShips,\n  fieldHoverWhenBuilding,\n  placeShipWhenBuilding,\n  resetShips,\n} from \"../../../store/buildSlice\";\nimport fieldSlice, {\n  initField,\n  putShipIntoField,\n  resetHighlightOnField,\n  setField,\n} from \"../../../store/fieldSlice\";\n\nimport { initFieldsForOpponents, setScore } from \"../../../store/playSlice\";\n\nimport playSlice from \"../../../store/playSlice\";\n\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport Field from \"../../Field/Field\";\n\nimport styles from \"./Build.module.css\";\n\nimport ShipSelection from \"./ShipSelection/ShipSelection\";\nimport { hoverShipOverField } from \"../../../store/fieldSlice\";\nimport isAllowed from \"../../../utils/fieldUtils/isAllowed\";\nimport getCoordFromId from \"../../../utils/common/getCoordsFromId\";\n\nimport fillShips from \"../../../gameEngine/fillShips\";\nimport defaultShips from \"../../../data/defaultShips\";\nimport createMatrix from \"../../../utils/common/createMatrix\";\n\nconst Build = () => {\n  const dispatch = useDispatch();\n  const {\n    currentlyBuildingCellId: hoverId,\n    shipsToBuild,\n    selectedShipSize,\n    isVertical,\n  } = useSelector((state) => state.build);\n  const [startBuild, setStartBuild] = useState(false);\n\n  let players = useSelector((state) => state.game.players);\n  let fields = useSelector((state) => state.field.fields);\n\n  useEffect(() => {\n    if (startBuild) {\n      if (selectedShipSize != null && hoverId) {\n        dispatch(\n          hoverShipOverField({\n            hoverId,\n            selectedShipSize,\n            isVertical,\n            player: \"p1\",\n          })\n        );\n      }\n    }\n  }, [dispatch, hoverId, isVertical, selectedShipSize]);\n\n  const buildClickHandler = () => {\n    dispatch(initField({ players }));\n    setStartBuild(true);\n  };\n  const generatedFieldHandler = (player) => {\n    dispatch(\n      setField({\n        field: fillShips({\n          field: createMatrix(10, 10, { type: \"\" }),\n          shipToBuild: defaultShips,\n        }),\n        player: player,\n      })\n    );\n    if (player == \"p1\") {\n      dispatch(clearShips());\n    }\n  };\n  const resetFieldHandler = (player) => {\n    if (player == \"p1\") {\n      dispatch(resetShips());\n      dispatch(\n        setField({ player: \"p1\", field: createMatrix(10, 10, { type: \"\" }) })\n      );\n    }\n  };\n  const changeStageToPlayHandler = () => {\n    let amountCellsToBuild = defaultShips.reduce((sum, item) => {\n      return sum + item[1] * item[0];\n    }, 0);\n    let arePlayersFieldsGenerated = Object.keys(fields).every((player) => {\n      let field = fields[player];\n      let amountCellsInField = field.reduce(\n        (sum, row) =>\n          sum +\n          row.reduce((rowSum, cell) => {\n            if (cell.type === \"ship\") {\n              rowSum++;\n            }\n            return rowSum;\n          }, 0),\n        0\n      );\n      return amountCellsToBuild === amountCellsInField;\n    });\n    if (arePlayersFieldsGenerated) {\n      players.forEach((p) => {\n        dispatch(setScore({ player: p, playerScore: 0 }));\n        dispatch(initFieldsForOpponents({ players: players }));\n      });\n\n      dispatch(play());\n    }\n  };\n\n  return (\n    <div className={styles.build}>\n      {startBuild && (\n        <div className={styles.buildFieldsContainer}>\n          <div className={styles.buildFieldContainer}>\n            <div\n              className={styles.mb}\n              onMouseOverCapture={(event) => {\n                dispatch(\n                  fieldHoverWhenBuilding({ id: event.target.id, player: \"p1\" })\n                );\n              }}\n              onMouseOutCapture={(event) => {\n                dispatch(resetHighlightOnField({ player: \"p1\" }));\n                dispatch(fieldHoverWhenBuilding(\"\"));\n              }}\n              onClickCapture={(event) => {\n                const id = event.target.id;\n                if (\n                  selectedShipSize &&\n                  shipsToBuild.filter(\n                    (shipToBuild) => shipToBuild[0] == selectedShipSize\n                  )[0][1] != 0 &&\n                  isAllowed({\n                    field: fields[\"p1\"],\n                    coord: getCoordFromId(id),\n                    size: selectedShipSize,\n                    isVertical,\n                  })\n                ) {\n                  dispatch(placeShipWhenBuilding());\n                  dispatch(\n                    putShipIntoField({\n                      id,\n                      selectedShipSize: selectedShipSize,\n                      player: \"p1\",\n                      isVertical,\n                    })\n                  );\n                }\n              }}\n            >\n              <Field player={\"p1\"} field={fields.p1} />\n            </div>\n            <div>\n              <ShipSelection />\n              <div className={styles.action}>\n                <button\n                  className={styles.btnPrimary}\n                  onClick={() => {\n                    generatedFieldHandler(\"p1\");\n                  }}\n                >\n                  Generate\n                </button>\n                <button\n                  className={styles.btnPrimary}\n                  onClick={() => {\n                    resetFieldHandler(\"p1\");\n                  }}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className={styles.buildFieldContainer}>\n            <div>\n              <Field player={\"p2\"} hidden={true} field={fields.p2} />\n            </div>\n            <div className={styles.action}>\n              <button\n                className={styles.btnPrimary}\n                onClick={(event) => {\n                  generatedFieldHandler(\"p2\");\n                }}\n              >\n                Generate\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      <div>\n        <button\n          className={styles.btnPrimary}\n          onClick={buildClickHandler}\n          disabled={startBuild}\n        >\n          Build\n        </button>\n        {startBuild && (\n          <button\n            className={styles.btnPrimary}\n            onClick={(event) => {\n              changeStageToPlayHandler();\n            }}\n          >\n            Play\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Build;\n","function randomInt(range) {\n  return Math.floor(Math.random() * range);\n}\n\nexport { randomInt };\n","import isOutOfBounds from \"../utils/common/isOutOfBounds\";\nimport vectors, { directions } from \"../utils/common/vectors\";\nimport { randomInt } from \"../utils/common/base\";\n\nfunction scanForWoundedShip(field) {\n  for (let row = 0; row < field.length; row++) {\n    for (let col = 0; col < field[row].length; col++) {\n      let cell = field[row][col];\n      if (cell.type === \"dead\") {\n        let coordsAroundCell = vectors.lookSides({ row, col });\n        let isAdjacentCellsWounded = coordsAroundCell.some(\n          (c) => field[c.row][c.col].type === \"fog\"\n        );\n        if (isAdjacentCellsWounded) {\n          return { wounded: true, row, col };\n        }\n      }\n    }\n  }\n  return { wounded: false, row: null, col: null };\n}\n\nfunction crawlUntil({ field, row, col, direction }) {\n  let targetCell = null;\n  let coords = { row, col };\n  while (\n    !isOutOfBounds(coords.row, coords.col, 10, 10) &&\n    field[coords.row][coords.col].type === \"dead\"\n  ) {\n    coords = vectors[direction]({ row: coords.row, col: coords.col });\n    if (\n      !isOutOfBounds(coords.row, coords.col, 10, 10) &&\n      field[coords.row][coords.col].type === \"fog\"\n    ) {\n      targetCell = { row: coords.row, col: coords.col };\n      return targetCell;\n    }\n  }\n  return targetCell;\n}\n\nfunction getTargets({ field, row, col }) {\n  let typeOfSides = directions.reduce((acc, direction) => {\n    let coordOfDirection = vectors[direction]({ row, col });\n    let { row: rowOfDirection, col: colOfDirection } = coordOfDirection;\n    if (isOutOfBounds(rowOfDirection, colOfDirection, 10, 10)) {\n      return acc;\n    }\n\n    acc[direction] = field[rowOfDirection][colOfDirection].type;\n    return acc;\n  }, {});\n  let targets = [];\n  if (typeOfSides.up === \"dead\" || typeOfSides.down == \"dead\") {\n    targets.push(\n      crawlUntil({ field, row, col, direction: \"up\" }),\n      crawlUntil({ field, row, col, direction: \"down\" })\n    );\n  }\n  if (typeOfSides.left === \"dead\" || typeOfSides.right == \"dead\") {\n    targets.push(\n      crawlUntil({ field, row, col, direction: \"left\" }),\n      crawlUntil({ field, row, col, direction: \"right\" })\n    );\n  }\n  return targets.filter((t) => t !== null);\n}\n\nfunction aiPlay(field) {\n  let { wounded, row, col } = scanForWoundedShip(field);\n  if (wounded) {\n    let sidesCoords = vectors.lookSides({ row, col });\n    let isOnlyOneCellWounded = sidesCoords\n      .map((side) => field[side.row][side.col])\n      .every((sideCell) => {\n        return sideCell.type !== \"dead\";\n      });\n    if (isOnlyOneCellWounded) {\n      sidesCoords = sidesCoords.filter(\n        (v) => field[v.row][v.col].type === \"fog\"\n      );\n      let randomIdx = randomInt(sidesCoords.length);\n      return sidesCoords[randomIdx];\n    }\n    let t = getTargets({ field, row, col }).filter(\n      (t) => field[t.row][t.col].type === \"fog\"\n    );\n    return t[randomInt(t.length)];\n  }\n  let randomRow = Math.floor(Math.random() * field.length);\n  let randomCol = Math.floor(Math.random() * field[0].length);\n  while (field[randomRow][randomCol].type !== \"fog\") {\n    randomCol = randomInt(10);\n    randomRow = randomInt(10);\n  }\n  return {\n    row: randomRow,\n    col: randomCol,\n  };\n}\n\nexport default aiPlay;\n","import { useSelector } from \"react-redux\";\n\nimport styles from \"./Score.module.css\";\n\nconst Score = (props) => {\n  const score = useSelector((state) => state.play.score);\n  let scoreContent = Object.keys(score).map((p) => (\n    <div key={p} className={styles.playerScore}>\n      <span className={styles.player}>{p}</span>\n      <span className={styles.playerScoreNumber}>{score[p]}</span>\n    </div>\n  ));\n\n  return <div className={styles.score}>{scoreContent}</div>;\n};\n\nexport default Score;\n","import { useCallback, useMemo, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { hit, initField } from \"../../../store/fieldSlice\";\nimport { final, start } from \"../../../store/stageSlice\";\nimport {\n  hitOpponentField,\n  switchPlayer,\n  setWinner,\n} from \"../../../store/playSlice\";\n\nimport { randomInt } from \"../../../utils/common/base\";\nimport defaultShips from \"../../../data/defaultShips\";\n\nimport getCoordFromId from \"../../../utils/common/getCoordsFromId\";\nimport aiPlay from \"../../../gameEngine/aiPlay\";\n\nimport Score from \"./Score\";\nimport Field from \"../../Field/Field\";\n\nimport styles from \"./Play.module.css\";\n\nconst Play = () => {\n  const dispatch = useDispatch();\n  const playerTurn = useSelector((state) => state.play.playerTurn);\n  const fields = useSelector((state) => state.field.fields);\n  const players = useSelector((state) => state.game.players);\n  const score = useSelector((state) => state.play.score);\n  const shipsToBuild = useSelector((state) => state.build.shipsToBuild);\n  const targetScore = useMemo(() => {\n    let sum = defaultShips.reduce((sum, ships) => {\n      console.log(sum, ships[0], ships[1]);\n      return sum + ships[0] * ships[1];\n    }, 0);\n    return sum;\n  }, [defaultShips]);\n  useEffect(() => {\n    if (playerTurn === null) {\n      const playerTurnAtStart = players[randomInt(players.length)];\n      dispatch(switchPlayer(playerTurnAtStart));\n    }\n    if (playerTurn === \"p2\") {\n      let a = aiPlay(oppositionFields[\"p1\"]);\n      let cell = fields[\"p1\"][a.row][a.col];\n      if (cell.type === \"\" || cell.type === \"ship\") {\n        dispatch(\n          hitOpponentField({\n            player: \"p1\",\n            row: a.row,\n            col: a.col,\n            field: fields[\"p1\"],\n          })\n        );\n        dispatch(hit({ player: \"p1\", col: a.col, row: a.row }));\n      }\n      if (cell.type === \"\" || cell.type === \"dead\") {\n        dispatch(switchPlayer(\"p1\"));\n      }\n    }\n  }, [playerTurn, fields[\"p1\"]]);\n\n  useEffect(() => {\n    let winner;\n    console.log(score.p1, score.p1, targetScore, score.p1 === targetScore);\n    if ([+score.p1, +score.p2].some((score) => score === targetScore)) {\n      winner = score.p1 === targetScore ? \"p1\" : \"p2\";\n\n      dispatch(setWinner(winner));\n      dispatch(final());\n    }\n  }, [score.p1, score.p2]);\n  const oppositionFields = useSelector(\n    (state) => state.play.fieldsForOpponents\n  );\n  const fieldClickHandler = (event, payload) => {\n    if (playerTurn === \"p1\") {\n      if (!event.target.id) {\n        return false;\n      }\n      let { row, col } = getCoordFromId(event.target.id);\n      let targetCellType = fields.p2[row][col].type;\n      if (targetCellType === \"ship\" || targetCellType === \"\") {\n        dispatch(\n          hitOpponentField({ player: \"p2\", row, col, field: fields[\"p2\"] })\n        );\n        dispatch(hit({ row, col, player: \"p2\" }));\n      }\n      if (targetCellType === \"\") {\n        dispatch(switchPlayer(playerTurn == \"p1\" ? \"p2\" : \"p1\"));\n      }\n      if (targetCellType !== \"\" && targetCellType !== \"ship\") {\n        return false;\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className={styles.info}>\n        <h2 className={styles.turnInfo}>\n          Player To Make a Turn <span>{playerTurn}</span>\n        </h2>\n        <div>\n          <Score />\n        </div>\n      </div>\n      <div className={styles.fieldsContainer}>\n        <div\n          onClickCapture={(event) => {\n            fieldClickHandler(event, { player: \"p1\" });\n          }}\n          className={styles.fieldContainer}\n        >\n          <Field player={\"p1\"} field={fields.p1} />\n        </div>\n        {oppositionFields.p2 && (\n          <div\n            onClickCapture={(event) => {\n              fieldClickHandler(event, { player: \"p2\" });\n            }}\n            className={styles.fieldContainer}\n          >\n            <Field player={\"p2\"} hidden={false} field={oppositionFields.p2} />\n          </div>\n        )}\n      </div>\n      <div class={styles.newGameBox}>\n        <button className={styles.btn} onClick={() => dispatch(start())}>\n          New Game\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Play;\n","import { useSelector, useDispatch } from \"react-redux\";\n\nimport { start } from \"../../store/stageSlice\";\n\nimport styles from \"./Final.module.css\";\n\nconst Final = () => {\n  const winner = useSelector((state) => state.play.winner);\n  const dispatch = useDispatch();\n  return (\n    <div className={styles.Final}>\n      <h1 class={styles.mainTitle}>This Round has finished</h1>\n      <p class={styles.winnerLabel}>Winner is</p>\n      <h2 className={styles.winner}>{winner}</h2>\n      <div>\n        <button\n          className={styles.btn}\n          onClick={() => {\n            dispatch(start());\n          }}\n        >\n          New Game\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Final;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport gameSlice from \"./store/gameSlice\";\nimport stageSlice from \"./store/stageSlice\";\nimport buildSlice, { changeDirection } from \"./store/buildSlice\";\n\nimport styles from \"./app.module.css\";\n\nimport Header from \"./components/UI/Header\";\nimport GameStart from \"./components/stages/GameStart\";\nimport RoundStart from \"./components/stages/RoundStart\";\nimport Build from \"./components/stages/Build/Build\";\nimport Play from \"./components/stages/Play/Play\";\nimport Final from \"./components/stages/Final\";\nimport { useEffect } from \"react\";\n\nconst App = () => {\n  const { round } = useSelector((state) => state.stage);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function handleKeyDown(event) {\n      if (event.keyCode === 68) {\n        dispatch(changeDirection());\n      }\n    }\n    document.addEventListener(\"keydown\", handleKeyDown);\n  }, []);\n  return (\n    <div\n      className=\"app\"\n      onKeyDown={(event) => {\n        console.log(event);\n      }}\n    >\n      <Header />\n      <div className={styles.fields}>\n        {round === \"start\" && <GameStart />}\n        {round === \"roundStart\" && <RoundStart />}\n        {round === \"build\" && <Build />}\n        {round === \"play\" && <Play />}\n        {round === \"final\" && <Final />}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}